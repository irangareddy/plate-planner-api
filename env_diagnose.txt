=== Poetry & Python Environment Diagnostics ===
Current date: Sun May  4 22:20:37 PDT 2025

1. Poetry version:
Poetry (version 1.8.4)

2. Poetry virtualenv info:

Virtualenv
Python:         3.12.6
Implementation: CPython
Path:           /Users/rangareddy/Library/Caches/pypoetry/virtualenvs/plate-planner-api-eDWVIG6z-py3.12
Executable:     /Users/rangareddy/Library/Caches/pypoetry/virtualenvs/plate-planner-api-eDWVIG6z-py3.12/bin/python
Valid:          True

Base
Platform:   darwin
OS:         posix
Python:     3.12.6
Path:       /Library/Frameworks/Python.framework/Versions/3.12
Executable: /Library/Frameworks/Python.framework/Versions/3.12/bin/python3.12

3. Python version and path:
Python 3.12.6
/Users/rangareddy/Library/Caches/pypoetry/virtualenvs/plate-planner-api-eDWVIG6z-py3.12/bin/python

4. Checking if you're on macOS and if Install Certificates.command exists:
Found: /Applications/Python 3.12/Install Certificates.command
If you haven't run this, do so now to fix SSL issues.

5. Checking certifi CA bundle location (used by requests/ssl):
/Users/rangareddy/Library/Caches/pypoetry/virtualenvs/plate-planner-api-eDWVIG6z-py3.12/lib/python3.12/site-packages/certifi/cacert.pem

6. Checking Python SSL default verify paths:
DefaultVerifyPaths(cafile=None, capath=None, openssl_cafile_env='SSL_CERT_FILE', openssl_cafile='/Library/Frameworks/Python.framework/Versions/3.12/etc/openssl/cert.pem', openssl_capath_env='SSL_CERT_DIR', openssl_capath='/Library/Frameworks/Python.framework/Versions/3.12/etc/openssl/certs')

7. Testing HTTPS connectivity from Python:

8. Attempting to download NLTK 'verbnet' corpus:

9. Checking if 'verbnet' is now available:

=== Diagnostics Complete ===

If you still see SSL or certificate errors above:
- On macOS: Run the Install Certificates.command for your Python version.
- If using Homebrew Python, try: brew install certifi
- Ensure your NLTK_DATA environment variable is set if you use a custom location.
- If behind a proxy/firewall, configure your proxy settings for Python and NLTK.

If 'verbnet' is found, you are ready to rerun your script!
